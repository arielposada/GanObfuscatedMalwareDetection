from fastai.vision.all import *
import matplotlib.pyplot as plt

# Definición de la estructura de datos
images = DataBlock(blocks=(ImageBlock, CategoryBlock),
                 get_items=get_image_files,
                 splitter=RandomSplitter(valid_pct=0.2),
                 get_y=parent_label,
                 item_tfms=Resize(224))

# Lista de rutas y sufijos
paths = ["/home/ariel.posada/AFGIE1/ShikataImg", 
         "/home/ariel.posada/AFGIE1/NonObfuscatedImg", 
         "/home/ariel.posada/AFGIE1/XORImg"]

sufijos = ['Shikata', 'NonObfuscated', 'XOR']

# Ciclo for para entrenar el modelo con cada ruta y guardar con el respectivo sufijo
for path, sufijo in zip(paths, sufijos):
    # Cargar datos
    loaders = images.dataloaders(Path(path), bs=64)
    
    # Entrenar el modelo
    model = "resnet18"
    learn = vision_learner(loaders, model, metrics=accuracy)
    learn.fine_tune(4)
    
    # Imprimir evaluación del modelo
    print(f"Evaluación del modelo {sufijo}:")
    print(f"Precisión en el conjunto de validación: {learn.validate()[1].item()}")
    
    # Guardar el modelo final
    learn.export(f"/home/ariel.posada/models/resnet18_{sufijo}Img")
    
    # Interpretación y matriz de confusión
    interp = ClassificationInterpretation.from_learner(learn)
    plt.figure(figsize=(6,6))
    interp.plot_confusion_matrix(title=f'Confusion Matrix {sufijo}', dpi=60)
    plt.savefig(f'/home/ariel.posada/models/confusion_matrix_{sufijo}Img.png')
